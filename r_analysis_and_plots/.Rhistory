tree_ufuw_host_full = (sgb_abu_host/rowSums(sgb_abu_host)) %>% otu_table(., taxa_are_rows = F) %>% phyloseq(otu_table=., tree=tree2) %>% UniFrac(weighted = F, normalized = T) %>% hclust(method="average") %>% as.phylo %>% unroot
tree_ufuw_host_full$node.label = prop.clades(tree_ufuw_host_full, lapply(jackknife_trees, function(x) x$ufuw_tree %>% unroot )  %>% data.table::setattr("class", "multiPhylo"))
tree_ufuw_host_full$tip.label = subset[match(tree_ufuw_host_full$tip.label, subset$host3),1] %>% unlist%>% as.vector
tree_ufw_host_full = (sgb_abu_host/rowSums(sgb_abu_host)) %>% otu_table(., taxa_are_rows = F) %>% phyloseq(otu_table=., tree=tree2) %>% UniFrac(weighted = T, normalized = T) %>% hclust(method="average") %>% as.phylo %>% unroot
tree_ufw_host_full$node.label = prop.clades(tree_ufw_host_full, lapply(jackknife_trees, function(x) x$ufw_tree %>% unroot )  %>% data.table::setattr("class", "multiPhylo"))
tree_ufw_host_full$tip.label = subset[match(tree_ufw_host_full$tip.label, subset$host3),1] %>% unlist%>% as.vector
tree_jac_host_full = gen_abu_host %>% vegdist(binary=T) %>% hclust(method="average") %>% as.phylo %>% unroot
tree_jac_host_full$node.label = prop.clades(tree_jac_host_full, lapply(jackknife_trees, function(x) x$jac_tree  %>% unroot) %>% unclass %>% data.table::setattr("class", "multiPhylo"))
tree_jac_host_full$tip.label = subset[match(tree_jac_host_full$tip.label, subset$host3),1] %>% unlist%>% as.vector
tree_func_host_full = func_abu_host_clr %>% dist %>% hclust(method="average") %>% as.phylo %>% unroot
tree_func_host_full$node.label = prop.clades(tree_func_host_full, lapply(jackknife_trees, function(x) x$func_tree  %>% unroot) %>% unclass %>% data.table::setattr("class", "multiPhylo"))
tree_func_host_full$tip.label = subset[match(tree_func_host_full$tip.label, subset$host3),1] %>% unlist%>% as.vector
tree_funcpa_host_full = func_abu_host_pa %>% vegdist(binary=T) %>% hclust(method="average") %>% as.phylo %>% unroot
tree_funcpa_host_full$node.label = prop.clades(tree_funcpa_host_full, lapply(jackknife_trees, function(x) x$func_tree  %>% unroot) %>% unclass %>% data.table::setattr("class", "multiPhylo"))
tree_funcpa_host_full$tip.label = subset[match(tree_funcpa_host_full$tip.label, subset$host3),1] %>% unlist%>% as.vector
p_phylosym=data.frame(
clr_full=(unlist(random_trees_100k_rf["clr"]) <= phangorn::RF.dist(host_tree,tree_clr_host_full)) %>% mean,
ufw_full=(unlist(random_trees_100k_rf["ufw"]) <= phangorn::RF.dist(host_tree,tree_ufw_host_full)) %>% mean,
ufuw_full=(unlist(random_trees_100k_rf["ufuw"]) <= phangorn::RF.dist(host_tree,tree_ufuw_host_full)) %>% mean,
jac_full=(unlist(random_trees_100k_rf["jac"]) <= phangorn::RF.dist(host_tree,tree_jac_host_full)) %>% mean,
func_full=(unlist(random_trees_100k_rf["func"]) <= phangorn::RF.dist(host_tree,tree_func_host_full)) %>% mean,
funcpa_full=(unlist(random_trees_100k_rf["funcpa"]) <= phangorn::RF.dist(host_tree,tree_func_host_full)) %>% mean
)
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta)  %>% ggplot(aes(x=host_long, y=PD, fill=host, shape=host)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta)  %>% ggplot(aes(x=host_long, y=PD, fill=host, shape=gsub("[0-9]","",host))) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta)  %>% ggplot(aes(x=host, y=PD, fill=host, shape=gsub("[0-9]","",host))) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panela
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta)  %>% ggplot(aes(x==gsub("[0-9]","",host), y=PD, fill=host, shape=host)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta)  %>% ggplot(aes(x=gsub("[0-9]","",host), y=PD, fill=host, shape=host)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta)  %>% ggplot(aes(x=gsub("[0-9]","",host), y=PD, fill=gsub("[0-9]","",host), shape=host)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
colset
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=gsub("[0-9]","",host), y=PD, fill=panel_a, shape=host)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host)))
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host, y=PD, fill=panel_a, shape=host)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=panel_a, shape=host)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host, shape=host)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host, shape=host, group=host)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host, shape=host, group=host2)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host, shape=host, group=host2)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host2) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host, shape=host, group=host2)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host, shape=host, group=host2)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,75), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host2, shape=host, group=host2)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,75), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host2, shape=host, group=host2)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,75), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host2) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_c_host = host_tree %>% ggtree(branch.length = "none", size=.8)   + theme_nothing() + scale_y_continuous(limits=c(0.5, 7.5)) + geom_tippoint(data = . %>% left_join(sample_meta, by=c("label"="host_tree")), aes(col=host_long, shape=host_long), size=3) + scale_color_manual(values=colset$col, breaks=colset$host_long) + scale_shape_manual(values=c(15:18)[colset$shape], breaks=colset$host_long)
panel_c_micro = tree_ufuw_host_full %>% root(node=10, resolve.root=T) %>% ape::rotate(8) %>% as.phylo() %>% ggtree(branch.length = "none", size=.8)  + scale_x_reverse() + theme_nothing() + scale_y_continuous(limits=c(0.5, 7.5)) + geom_tippoint(data = . %>% left_join(sample_meta, by=c("label"="host_tree")), aes(col=host_long, shape=host_long), size=3) + scale_color_manual(values=colset$col, breaks=colset$host_long) + scale_shape_manual(values=c(15:18)[colset$shape], breaks=colset$host_long)
panel_c_conn = panel_b_host$data %>% filter(isTip) %>% select(label,y_host=y) %>% left_join(panel_b_micro$data %>% filter(isTip) %>% select(label,y_micro=y)) %>% left_join(colset, by=c("label"="host_tree")) %>% ggplot(aes(x=1, xend=2, y=y_host, yend=y_micro)) + geom_segment(size=.8, lty=2) + theme_nothing() + scale_y_continuous(limits=c(0.5, 7.5))
panel_c_conn = panel_c_host$data %>% filter(isTip) %>% select(label,y_host=y) %>% left_join(panel_c_micro$data %>% filter(isTip) %>% select(label,y_micro=y)) %>% left_join(colset, by=c("label"="host_tree")) %>% ggplot(aes(x=1, xend=2, y=y_host, yend=y_micro)) + geom_segment(size=.8, lty=2) + theme_nothing() + scale_y_continuous(limits=c(0.5, 7.5))
fig1_panel_c = plot_grid(panel_c_host, panel_c_conn, panel_c_micro, align = "h", ncol=3 )
fig1_panel_c
fig1_left = cowplot::plot_grid(panel_a,
fig1_panel_b+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
cowplot::plot_grid(
get_legend(fig1_panel_b + guides(colour = guide_legend(ncol = 1, title="",byrow = TRUE), shape=guide_legend(ncol = 1, title="",byrow = TRUE)) +
theme(legend.spacing.y = unit(0.1, 'cm') ,legend.position = "bottom", legend.justification = "top", legend.text = element_text(size=10), legend.key.size = unit(0.2, "cm"))),
fig1_panel_c, rel_widths=c(.5,.5), labels=c("","b")),
fig1_panel_d+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
ncol=1, rel_heights = c(.2,.3,.2,.3), labels=c("a","","c","d"))
panel_d_heatmap=sgb_share_rand %>% filter(!is.na(n_rel)) %>% left_join(sgb_share) %>% mutate(gt = n_rel <= mean_n, lt = n_rel >= mean_n) %>% group_by(ref_host, host2) %>% summarise(p_lt=1 - ((sum(lt)))/(n()+1), p_gt=1 -((sum(gt)))/(n()+1)) %>% left_join(sgb_share) %>%
ggplot(aes(x=host2, y=ref_host, alpha=mean_n, fill=ref_host)) + geom_tile() + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_alpha(range=c(0,1)) +
geom_text(aes(label = ifelse(p_gt < 0.05, paste0(signif(p_gt,1),sprintf('\u2191')), "")), alpha=1, size=3) +
geom_text(aes(label = ifelse(p_lt < 0.05, paste0(signif(p_lt,1),sprintf('\u2193')), "")), alpha=1, size=3) +
theme_nothing() + theme(legend.position="none")
panel_d_bottom = colset %>% filter(!host %in% c("Ggorilla2","Pttrog2")) %>% ggplot(aes(x=host, y=1, col=host, shape=host)) + geom_point(size=5) +
scale_color_manual(values=colset$col, breaks=colset$host) +
scale_shape_manual(values=c(15:19)[colset$shape], breaks=colset$host) +
theme_nothing() + theme(legend.position="none")
fig1_panel_d=plot_grid(plot_grid(panel_d_tree) + theme(plot.margin = unit(c(0,0,0,.5),"cm")), panel_d_heatmap+ theme(plot.margin = unit(c(0,0,0,0),"cm")), NULL, panel_a_bottom + theme(plot.margin = unit(c(0,0,0,0),"cm") ), rel_widths=c(.2,.8), rel_heights = c(.95,.1))
host_tree2 = host_tree %>% bind.tip(tree=., tip.label="Homo_sapiensA", where=which(host_tree$tip.label=="Homo_sapiens")) %>% bind.tip(tree=., tip.label="Homo_sapiensB", where=which(.$tip.label=="Homo_sapiensA"))
panel_d_tree = ggtree(host_tree2, size=1) %>% ggtree::rotate(13) %>% ggtree::rotate(15)
panel_d_tree$data = panel_a_tree$data %>% left_join(colset %>% mutate(label = case_when(host=="HsA1" ~ "Homo_sapiensA", host=="HsA2" ~ "Homo_sapiensB", T ~ host_tree)))
panel_d_tree = panel_a_tree + geom_tippoint(aes(col=host, shape=host), size=5) + scale_color_manual(values=colset$col, breaks=colset$host) +
scale_shape_manual(values=c(15:19)[colset$shape], breaks=colset$host) + theme_nothing() + theme(legend.position = "none") + scale_x_continuous(expand=c(0.5,.5))
fig1_panel_d=plot_grid(plot_grid(panel_d_tree) + theme(plot.margin = unit(c(0,0,0,.5),"cm")), panel_d_heatmap+ theme(plot.margin = unit(c(0,0,0,0),"cm")), NULL, panel_a_bottom + theme(plot.margin = unit(c(0,0,0,0),"cm") ), rel_widths=c(.2,.8), rel_heights = c(.95,.1))
fig1_left = cowplot::plot_grid(panel_a,
fig1_panel_b+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
cowplot::plot_grid(
get_legend(fig1_panel_b + guides(colour = guide_legend(ncol = 1, title="",byrow = TRUE), shape=guide_legend(ncol = 1, title="",byrow = TRUE)) +
theme(legend.spacing.y = unit(0.1, 'cm') ,legend.position = "bottom", legend.justification = "top", legend.text = element_text(size=10), legend.key.size = unit(0.2, "cm"))),
fig1_panel_c, rel_widths=c(.5,.5), labels=c("","b")),
fig1_panel_d+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
ncol=1, rel_heights = c(.2,.3,.2,.3), labels=c("a","","c","d"))
fig1_left
ggsave(filename = "figures_and_tables/fig1_left.png",fig1_left, width = 6.5, height=13, bg="white")
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host2, shape=host, group=host2)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1), axis.text = element_text(size=8)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,75), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host2) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
fig1_left = cowplot::plot_grid(panel_a + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
fig1_panel_b+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
cowplot::plot_grid(
get_legend(fig1_panel_b + guides(colour = guide_legend(ncol = 1, title="",byrow = TRUE), shape=guide_legend(ncol = 1, title="",byrow = TRUE)) +
theme(legend.spacing.y = unit(0.1, 'cm') ,legend.position = "bottom", legend.justification = "top", legend.text = element_text(size=10), legend.key.size = unit(0.2, "cm"))),
fig1_panel_c, rel_widths=c(.5,.5), labels=c("","b")),
fig1_panel_d+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
ncol=1, rel_heights = c(.2,.3,.2,.3), labels=c("a","","c","d"))
ggsave(filename = "figures_and_tables/fig1_left.png",fig1_left, width = 6.5, height=13, bg="white")
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host2, shape=host, group=host2)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1), axis.text = element_text(size=6)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,75), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host2) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
fig1_left = cowplot::plot_grid(panel_a + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
fig1_panel_b+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
cowplot::plot_grid(
get_legend(fig1_panel_b + guides(colour = guide_legend(ncol = 1, title="",byrow = TRUE), shape=guide_legend(ncol = 1, title="",byrow = TRUE)) +
theme(legend.spacing.y = unit(0.1, 'cm') ,legend.position = "bottom", legend.justification = "top", legend.text = element_text(size=10), legend.key.size = unit(0.2, "cm"))),
fig1_panel_c, rel_widths=c(.5,.5), labels=c("","b")),
fig1_panel_d+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
ncol=1, rel_heights = c(.2,.3,.2,.3), labels=c("a","","c","d"))
plot(fig1_left)
ggsave(filename = "figures_and_tables/fig1_left.png",fig1_left, width = 6.5, height=13, bg="white")
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host2, shape=host, group=host2)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1), axis.text = element_text(size=4)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,75), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host2) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host2, shape=host, group=host2)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1), axis.title =  = element_text(size=6)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,75), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host2) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host2, shape=host, group=host2)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1), axis.title = element_text(size=6)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,75), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host2) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
panel_a
panel_a = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta) %>% mutate(host2=ifelse(host_tree=="Homo_sapiens", host, gsub("[0-9]","",host))) %>% ggplot(aes(x=host2, y=PD, fill=host2, shape=host, group=host2)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.2, size=1.5) + theme(axis.text.x = element_text(angle=45, hjust=1), axis.title = element_text(size=10)) + scale_fill_manual(values=colset$col, breaks=colset$host) + scale_y_continuous(limits=c(0,75), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") + scale_shape_manual(values=c(22,21,24,23,21)[colset$shape], breaks=colset$host2) #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
fig1_left = cowplot::plot_grid(panel_a + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
fig1_panel_b+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
cowplot::plot_grid(
get_legend(fig1_panel_b + guides(colour = guide_legend(ncol = 1, title="",byrow = TRUE), shape=guide_legend(ncol = 1, title="",byrow = TRUE)) +
theme(legend.spacing.y = unit(0.1, 'cm') ,legend.position = "bottom", legend.justification = "top", legend.text = element_text(size=10), legend.key.size = unit(0.2, "cm"))),
fig1_panel_c, rel_widths=c(.5,.5), labels=c("","b")),
fig1_panel_d+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
ncol=1, rel_heights = c(.2,.3,.2,.3), labels=c("a","","c","d"))
plot(fig1_left)
ggsave(filename = "figures_and_tables/fig1_left.png",fig1_left, width = 6.5, height=13, bg="white")
saveRDS(fig1_left, "figures_and_tables/fig1_left.Rds")
plot1_left = readRDS("figures_and_tables/fig1_left.Rds")
plot1_complete = cowplot::plot_grid(plot1_left, plot1_right, rel_widths = c(.3,.7))
ggsave(filename = "figures_and_tables/Figure_1.png", plot1_complete, height=11.5, width=16.5, bg="white")
fig1_left = cowplot::plot_grid(panel_a + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
fig1_panel_b+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
cowplot::plot_grid(
get_legend(fig1_panel_b + guides(colour = guide_legend(ncol = 1, title="",byrow = TRUE), shape=guide_legend(ncol = 1, title="",byrow = TRUE)) +
theme(legend.spacing.y = unit(0.1, 'cm') ,legend.position = "bottom", legend.justification = "top", legend.text = element_text(size=10), legend.key.size = unit(0.2, "cm"))),
fig1_panel_c, rel_widths=c(.5,.5), labels=c("","c")),
fig1_panel_d+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
ncol=1, rel_heights = c(.2,.3,.2,.3), labels=c("a","b","","d"))
plot(fig1_left)
ggsave(filename = "figures_and_tables/fig1_left.png",fig1_left, width = 6.5, height=13, bg="white")
saveRDS(fig1_left, "figures_and_tables/fig1_left.Rds")
plot1_complete = cowplot::plot_grid(plot1_left, plot1_right, rel_widths = c(.3,.7))
ggsave(filename = "figures_and_tables/Figure_1.png", plot1_complete, height=11.5, width=16.5, bg="white")
panel_g
panel_g = panel_g_data  %>% ggplot(aes(x=group, y=Z_meta, col=plotcat)) + geom_jitter(width=.2, size=1) + facet_grid( ~ compcat, scales = "free_x", space="free_x") + theme(axis.text.x = element_text(angle=45, hjust=1)) + xlab("") + geom_hline(yintercept = 0, lty=2, color="lightgrey") + scale_color_manual(values=c("darkblue", "lightblue", "blue","#FF8C00","grey"), breaks=c("A","B","C","D","E")) + theme(legend.position = "none") + ylab("Z-Value") + stat_summary(fun = median, fun.ymin = median, fun.ymax = median, geom = "crossbar", width = 0.5, col="black", alpha=.5)
panel_g
panel_g_data = res_meta_mod_res  %>% filter(q.value<0.05)  %>% select(group, group_name) %>% left_join(cands_meta %>% left_join(distinct(KO_TO_ALL), by=c("ogs"="V1")) %>% filter(!is.na(V2)), by=c("group"="V2")) %>% mutate(plotcat = case_when(qval>0.05 ~ "E", Z_meta > 0 ~ "A", Z_meta < 0 ~ "B"), compcat = "Human \n EUR vs. AFR", comp="indus")  %>% mutate(group = fct_reorder(group, Z_meta, .fun=median))
panel_g = panel_g_data  %>% ggplot(aes(x=group, y=Z_meta, col=plotcat)) + geom_jitter(width=.2, size=1) + facet_grid( ~ compcat, scales = "free_x", space="free_x") + theme(axis.text.x = element_text(angle=45, hjust=1)) + xlab("") + geom_hline(yintercept = 0, lty=2, color="lightgrey") + scale_color_manual(values=c("darkblue", "lightblue", "blue","#FF8C00","grey"), breaks=c("A","B","C","D","E")) + theme(legend.position = "none") + ylab("Z-Value") + stat_summary(fun = median, fun.ymin = median, fun.ymax = median, geom = "crossbar", width = 0.5, col="black", alpha=.5)
panel_g
panel_h = res_func %>% reshape2::dcast(trait ~ comp, value.var="t.value") %>% left_join(res_func %>% filter(comp=="human") %>% select(trait, log_fold_diff, q, status)) %>%
ggplot(aes(x=human, y=indus)) +
geom_point(aes(col=status, size=abs(log_fold_diff)))  +
scale_color_manual(values=c("blue","darkblue","#FF8C00","lightblue","grey")) +
theme(legend.position = "none") +
geom_hline(yintercept = c(-func_thresh,func_thresh), lty=2, color="lightgrey") + geom_vline(xintercept = c(-func_thresh,func_thresh), lty=2, color="lightgrey") +
ggrepel::geom_label_repel(data = . %>% filter(trait %in% top_trait_func), aes(label=trait), max.overlaps = 20, size=3) +
xlab("NHP vs. Human") + ylab("Human AFR vs. EUR") + scale_size_continuous(range=c(1,2))
panel_h
panel_f = res_gen  %>% filter(comp=="human") %>% select(trait, mean_abu_nhp=mean_abu1) %>% left_join(res_gen %>% filter(comp=="indus") %>% select(trait, mean_abu_hsa=mean_abu1, mean_abu_hsg=mean_abu2,)) %>% mutate(status=case_when(trait %in% taxa_indus ~ "HumanEUR", trait %in% taxa_nonindus ~ "Human_AFR", trait %in% taxa_human ~ "Human",  trait %in% taxa_chimp ~ "NHP", TRUE ~ "other")) %>% reshape2::melt(.) %>% ggplot(aes(x=variable, y=value)) + geom_line(aes(col=status, group=trait), size=0.2,alpha=.2) + geom_line(data = . %>% group_by(status,variable) %>% summarize(value=mean(value)),aes(group=status, col=status), size=3) + scale_x_discrete(expand = c(0,0), labels=c("NHP","Human AFR","Human EUR")) + scale_y_continuous(breaks=c(0,5,10)) + scale_color_manual(values=c("blue","darkblue","lightblue","#FF8C00","grey")) + xlab("") + ylab("Mean CLR Abu") + theme(axis.text.x = element_text(angle=45,hjust=1))
colset=colset %>% arrange(host_long)
## clr transformation of genus level abundances
gen = gen[!rownames(gen) %in% sample_exclude,]
sgb_abundance = sgb_abundance[!rownames(sgb_abundance) %in% sample_exclude,]
sgb_long = sgb_long %>% filter(!sample %in% sample_exclude)
gen_clr = (gen+1) %>% data.frame %>% clr
gen_clr[gen_clr<0] = 0
### select candidate genera for testing with prevalence > 20% and mean abundance > 0.1% (1000 TPM) in one subgroup
cand_gen = gen %>% data.frame %>% rownames_to_column("sample") %>% reshape2::melt() %>% left_join(sample_meta) %>% filter(host_genus != "Gorilla") %>% group_by(host_long, variable) %>% summarise(mean_abu = mean(value), mean_prev = mean(value>0)) %>% filter(mean_prev > .2, mean_abu>1000) %>% pull(variable) %>% unique() %>% as.character()
if(file.exists("../../../220303_Analysis_New/intermediate_data/res_gen.Rds")){
res_gen=readRDS("../../../220303_Analysis_New/intermediate_data/res_gen.Rds")
}else{
res_gen = do.call("rbind",lapply(cand_gen, function(cf){
ab = gen_clr[,cf]
df = ab %>% reshape2::melt(.) %>% rownames_to_column("sample") %>% left_join(data.frame(gen)[,cf, drop=F] %>% rownames_to_column("sample") %>% select(sample, value_tpm=2)) %>% left_join(sample_meta) %>% filter(host_genus != "Gorilla") %>% mutate(indus=host=="HsG", human= host %in% c("HsA1","HsG","HsA2"))
df_out=data.frame(trait=cf, comp=c("human","indus"),summary(lm(value ~ human*indus, data = df))$coefficients[2:3,], bind_rows(df %>% group_by(human) %>% summarize(mean_abu=mean(value)) %>% select(mean_abu) %>% unlist(), df %>% filter(human) %>% group_by(indus) %>% summarize(mean_abu=mean(value)) %>% select(mean_abu) %>% unlist()), stringsAsFactors = F)
return(df_out)
})) %>% do.call("bind_rows",.) %>% mutate(log_fold_diff = log((mean_abu2+0.01)/(mean_abu1+0.01)))
saveRDS(res_gen, "../../../220303_Analysis_New/intermediate_data/res_gen.Rds")
}
res_gen$q <- p.adjust(res_gen$Pr...t..,"bonferroni")
res_gen_sub <- res_gen %>% filter(trait %in% c(res_gen %>% filter(mean_abu1 > 1 | mean_abu2 > 1, q < 0.05) %>% pull(trait)))
## assign taxa to group
taxa_indus = res_gen_sub %>% filter(comp=="indus", q<0.05, Estimate>0) %>% pull(trait)
taxa_nonindus = res_gen_sub %>% filter(comp=="indus", q<0.05, Estimate<0) %>% pull(trait)
taxa_human = res_gen_sub %>% filter(comp=="human", q<0.05, Estimate>0) %>% pull(trait)
taxa_chimp = res_gen_sub %>% filter(comp=="human", q<0.05, Estimate<0) %>% pull(trait)
res_gen = res_gen %>% mutate(status=case_when(trait %in% taxa_indus ~ "Human_EUR", trait %in% taxa_nonindus ~ "Human_AFR", trait %in% taxa_human ~ "Human",  trait %in% taxa_chimp ~ "NHP", TRUE ~ "other"))
write.table(res_gen, "figures_and_tables/Suppl_Table_S4_Results_Tax.tsv", row.names = F, sep="\t")
####
top_trait_tax = res_gen %>% filter(q<0.05) %>% mutate(dir=sign(t.value)) %>% group_by(comp, dir) %>% slice_min(order_by=q, n=3) %>% pull(trait)
tax_thresh = res_gen %>% arrange(q) %>% filter(q<0.05) %>% tail(1) %>% pull(t.value) %>% abs
panel_d=res_gen %>% reshape2::dcast(trait ~ comp, value.var="t.value") %>% left_join(res_gen %>% filter(comp=="human") %>% select(trait, log_fold_diff, q)) %>%  left_join(sgb_reps %>% select(trait=genus, phylum2) %>% distinct()) %>% mutate(status=case_when(trait %in% taxa_indus ~ "Human_EUR", trait %in% taxa_nonindus ~ "Human_AFR", trait %in% taxa_human ~ "Human",  trait %in% taxa_chimp ~ "NHP", TRUE ~ "other")) %>% ggplot(aes(x=human, y=indus)) + geom_point(aes(col=status, size=abs(log_fold_diff)))  + scale_color_manual(values=c("blue","darkblue","#FF8C00","lightblue","grey")) + theme(legend.position = "none") + geom_hline(yintercept = c(-tax_thresh,tax_thresh), lty=2, color="lightgrey") + geom_vline(xintercept = c(-tax_thresh,tax_thresh), lty=2, color="lightgrey") + ggrepel::geom_label_repel(data = . %>% filter(trait %in% c("g__Bacteroides","g__Akkermansia","g__Alistipes","g__Prevotella","g__Succinivibrio","g__Cryptobacteroides","g__Methanobrevibacter_A","g__Coprococcus","g__SIG603","g__Senegalimassilia")), aes(label=trait, col=status), max.overlaps = 20, size=3) + xlab("NHP vs. Human") + ylab("Human AFR vs. EUR") + scale_size_continuous(range=c(2,3))
panel_e = gen[,c("g__SIG603","g__Coprococcus","g__Prevotella","g__Bacteroides"), drop=F] %>% rownames_to_column("sample")  %>% reshape2::melt() %>% left_join(sample_meta) %>% mutate(host_group = ifelse(grepl("^Hs", host),"Human","NHP")) %>% group_by(host_group) %>% mutate() %>% ggplot(aes(y=value/10000)) + geom_boxplot(aes(x=as.numeric(as.factor(host_group))-0.125, fill=host_group), width=.25, outlier.shape = NA) + geom_jitter(width=.025, height=0, aes(x=as.numeric(as.factor(host_group))+(gid/9), col=host_long)) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_color_manual(values=colset$col, breaks=colset$host_long) + scale_y_continuous(expand=c(0,0)) + ylab("Abundance (%)") + theme(legend.position = "none") + facet_wrap(~variable, scales="free_y") + scale_fill_manual(values=c("blue","#FF8C00")) + scale_x_continuous(breaks=c(1,2), labels=c("Human","NHP")) + xlab("") + theme(strip.text.x = element_text(size = 10))
panel_f = res_gen  %>% filter(comp=="human") %>% select(trait, mean_abu_nhp=mean_abu1) %>% left_join(res_gen %>% filter(comp=="indus") %>% select(trait, mean_abu_hsa=mean_abu1, mean_abu_hsg=mean_abu2,)) %>% mutate(status=case_when(trait %in% taxa_indus ~ "HumanEUR", trait %in% taxa_nonindus ~ "Human_AFR", trait %in% taxa_human ~ "Human",  trait %in% taxa_chimp ~ "NHP", TRUE ~ "other")) %>% reshape2::melt(.) %>% ggplot(aes(x=variable, y=value)) + geom_line(aes(col=status, group=trait), size=0.2,alpha=.2) + geom_line(data = . %>% group_by(status,variable) %>% summarize(value=mean(value)),aes(group=status, col=status), size=3) + scale_x_discrete(expand = c(0,0), labels=c("NHP","Human AFR","Human EUR")) + scale_y_continuous(breaks=c(0,5,10)) + scale_color_manual(values=c("blue","darkblue","lightblue","#FF8C00","grey")) + xlab("") + ylab("Mean CLR Abu") + theme(axis.text.x = element_text(angle=45,hjust=1))
### calculate enrichment between non-indus Humans and NHPs
aaa_ni = lapply(sample(taxa_nonindus, 30), function(xx) (gen %>% data.frame %>% rownames_to_column("sample") %>% melt(.) %>% filter(variable %in% xx) %>% left_join(sample_meta)  %>% filter(host_genus %in% c("Pan"), host!="HsG") %>% group_by(sample, host_genus) %>% summarize(cum_sum = sum(value)) %>% wilcox.test(.$cum_sum, mu=1000, data=., alternative="greater"))$p.value)
num_nonindus_in_nhp = sum((aaa_ni %>% unlist) < 0.05)
library(parallel)
if(file.exists("../../../220303_Analysis_New/intermediate_data/random_share.Rds")){
aaa_rand=readRDS("../../../220303_Analysis_New/intermediate_data/random_share.Rds")
}else{
aaa_rand = lapply(1:999, function(f){print(f); aaa=lapply(sample(taxa_human, 30), function(xx) (gen %>% data.frame %>% rownames_to_column("sample") %>% melt(.) %>% filter(variable %in% xx) %>% left_join(sample_meta)  %>% filter(host_genus %in% c("Pan"), host!="HsG") %>% group_by(sample, host_genus) %>% summarize(cum_sum = sum(value)) %>% wilcox.test(.$cum_sum, mu=1000, data=., alternative="greater"))$p.value)
return(sum((aaa %>% unlist) < 0.05))})
saveRDS(aaa_rand, "../../../220303_Analysis_New/intermediate_data/random_share.Rds")
}
p_enrich = 1-sum(unlist(aaa_rand) <= num_nonindus_in_nhp)/(999+1)
###
func_abu_long = sgb_long %>% filter(value>0) %>% mutate(host_group=substr(host,1,1)) %>% select(sample, GreatApes_95_final=variable, host_group, value) %>% left_join(pangenome_all) %>% group_by(sample, ogs) %>% summarize(abundance=sum(value)) %>% filter(!is.na(ogs))
func_abu = reshape2::dcast(sample ~ ogs, value.var="abundance", fill=0, data=func_abu_long) %>% data.frame %>% column_to_rownames("sample")
func_clr=compositions::clr(func_abu+1)
func_clr[func_clr<0] = 0
cand_func = func_clr %>% data.frame %>% rownames_to_column("sample") %>% reshape2::melt() %>% left_join(sample_meta)  %>% filter(host_genus != "Gorilla")  %>% group_by(host_long, variable) %>% summarise(mean_abu = mean(value), mean_prev = mean(value>0)) %>% filter(mean_prev > .2, mean_abu > 1) %>% pull(variable) %>% unique() %>% as.character()
if(file.exists("../../../220303_Analysis_New/intermediate_data/res_func.Rds")){
res_func=readRDS("../../../220303_Analysis_New/intermediate_data/res_func.Rds")
}else{
res_func = lapply(cand_func, function(cf){
ab = func_clr[,cf]
df = ab %>% reshape2::melt(.) %>% rownames_to_column("sample") %>% left_join(data.frame(func_clr)[,cf, drop=F] %>% rownames_to_column("sample") %>% select(sample, value_tpm=2)) %>% left_join(sample_meta)  %>% filter(host_genus != "Gorilla") %>% mutate(indus=host=="HsG", human= host %in% c("HsA1","HsG","HsA2"))
df_out=data.frame(trait=cf, comp=c("human","indus"),summary(lm(value ~ human*indus, data = df))$coefficients[2:3,], bind_rows(df %>% group_by(human) %>% summarize(mean_abu=mean(value)) %>% select(mean_abu) %>% unlist(), df %>% filter(human) %>% group_by(indus) %>% summarize(mean_abu=mean(value)) %>% select(mean_abu) %>% unlist()), stringsAsFactors = F)
return(df_out)
}) %>% do.call("bind_rows",.) %>% mutate(log_fold_diff = log((mean_abu2+0.01)/(mean_abu1+0.01)))
saveRDS(res_func, "../../../220303_Analysis_New/intermediate_data/res_func.Rds")
}
res_func=res_func %>% mutate(trait=paste0("ko:",trait))
res_func$q <- p.adjust(res_func$Pr...t..,"bonferroni")
res_func_sub <- res_func %>% filter(trait %in% c(res_func %>% filter(mean_abu1 > 1 | mean_abu2 > 1) %>% pull(trait))) %>% arrange(q) %>% left_join(KO_NAMES, by=c("trait"="ko"))
func_indus = res_func_sub %>% filter(comp=="indus", q<0.05, Estimate>0) %>% pull(trait)
func_nonindus = res_func_sub %>% filter(comp=="indus", q<0.05, Estimate<0) %>% pull(trait)
func_human = res_func_sub %>% filter(comp=="human", q<0.05, Estimate>0) %>% pull(trait)
func_chimp = res_func_sub %>% filter(comp=="human", q<0.05, Estimate<0) %>% pull(trait)
res_func = res_func %>% mutate(status=case_when(trait %in% func_indus ~ "Human_EUR", trait %in% func_nonindus ~ "Human_AFR", trait %in% func_human ~ "Human",  trait %in% func_chimp ~ "NHP", TRUE ~ "other"))
write.table(res_func, "figures_and_tables/Suppl_Table_S5_Results_Func.tsv", row.names = F, sep="\t")
top_trait_func = res_func_sub %>% mutate(dir=sign(t.value)) %>% group_by(comp, dir) %>% slice_min(order_by=q, n=5) %>% pull(trait)
func_thresh = res_func %>% arrange(q) %>% filter(q<0.05) %>% tail(1) %>% pull(t.value) %>% abs
panel_h = res_func %>% reshape2::dcast(trait ~ comp, value.var="t.value") %>% left_join(res_func %>% filter(comp=="human") %>% select(trait, log_fold_diff, q, status)) %>%
ggplot(aes(x=human, y=indus)) +
geom_point(aes(col=status, size=abs(log_fold_diff)))  +
scale_color_manual(values=c("blue","darkblue","#FF8C00","lightblue","grey")) +
theme(legend.position = "none") +
geom_hline(yintercept = c(-func_thresh,func_thresh), lty=2, color="lightgrey") + geom_vline(xintercept = c(-func_thresh,func_thresh), lty=2, color="lightgrey") +
ggrepel::geom_label_repel(data = . %>% filter(trait %in% top_trait_func), aes(label=trait), max.overlaps = 20, size=3) +
xlab("NHP vs. Human") + ylab("Human AFR vs. EUR") + scale_size_continuous(range=c(1,2))
#### enrichment of KOs in higher level annotations
res_func_mod = res_func   %>% left_join(distinct(KO_TO_ALL), by=c("trait"="V1")) %>% filter(!is.na(V2)) %>% mutate(si=sign(t.value), sig=q<0.05) %>% select(sig, si,comp, V2) %>% table %>% data.frame()
res_func_mod_res = res_func_mod  %>% group_by(comp, V2) %>% summarize(n=sum(Freq)) %>% filter(n>=5) %>% apply(., 1, function(x) (res_func   %>% mutate(trait=gsub("[.]",":",trait)) %>% left_join(KO_NAMES, by=c("trait"="ko")) %>% left_join(distinct(KO_TO_ALL), by=c("trait"="V1")) %>% filter(!is.na(V2)) %>% filter(comp==x[1]) %>% mutate(this=V2==x[2], sig=q<0.05) %>% arrange(-sig,-this) %>% select(-annot) %>% distinct_at(.vars = "trait",.keep_all = T) %>% select(this, sig)  %>% mutate(this=factor(this, levels=c(TRUE,FALSE)), sig=factor(sig, levels=c(TRUE,FALSE)))  %>% table %>% fisher.test(., alternative="greater"))[c("p.value", "estimate")] %>% c(x, .)) %>% do.call("bind_rows",.) %>% mutate(q=p.adjust(p.value, "fdr")) %>%  left_join(ALL_NAMES, by=c("V2"="V1"))
write.table(res_func_mod_res, "figures_and_tables/Suppl_Table_S6_Results_Modules.tsv", row.names = F, sep="\t")
panel_i = res_func_mod_res %>% filter(q<0.05)  %>% select(comp, V2, V2.y) %>% left_join(res_func %>% left_join(distinct(KO_TO_ALL), by=c("trait"="V1")) %>% filter(!is.na(V2))) %>% mutate(plotcat = case_when(q>0.05 ~ "E", comp=="indus" & t.value > 0 ~ "A", comp=="indus" & t.value < 0 ~ "B", comp=="human" & t.value > 0 ~ "C", comp=="human" & t.value < 0 ~ "D"), compcat = ifelse(comp=="human", "NHP vs.\nHuman", "Non-Indust.\nvs. Indust.")) %>% ggplot(aes(x=V2, y=t.value, col=plotcat)) + geom_jitter(width=.2, size=1) + facet_grid( ~ compcat, scales = "free_x", space="free_x") + theme(axis.text.x = element_text(angle=45, hjust=1)) + xlab("") + geom_hline(yintercept = 0, lty=2, color="lightgrey") + scale_color_manual(values=c("darkblue", "lightblue", "blue","#FF8C00","grey"), breaks=c("A","B","C","D","E")) + theme(legend.position = "none", strip.clip = "off") + ylab("t-Value") + stat_summary(data= . %>% mutate(plotcat="F"), fun = median, fun.ymin = median, fun.ymax = median, geom = "crossbar", width = 0.5, col="black", alpha=.5)
panel_i = res_func_mod_res %>% filter(q<0.05)  %>% select(comp, V2, V2.y) %>% left_join(res_func %>% left_join(distinct(KO_TO_ALL), by=c("trait"="V1")) %>% filter(!is.na(V2))) %>% mutate(plotcat = case_when(q>0.05 ~ "E", comp=="indus" & t.value > 0 ~ "A", comp=="indus" & t.value < 0 ~ "B", comp=="human" & t.value > 0 ~ "C", comp=="human" & t.value < 0 ~ "D"), compcat = ifelse(comp=="human", "NHP vs.\nHuman", "Human\nAFR vs. EUR")) %>% ggplot(aes(x=V2, y=t.value, col=plotcat)) + geom_jitter(width=.2, size=1) + facet_grid( ~ compcat, scales = "free_x", space="free_x") + theme(axis.text.x = element_text(angle=45, hjust=1)) + xlab("") + geom_hline(yintercept = 0, lty=2, color="lightgrey") + scale_color_manual(values=c("darkblue", "lightblue", "blue","#FF8C00","grey"), breaks=c("A","B","C","D","E")) + theme(legend.position = "none", strip.clip = "off") + ylab("t-Value") + stat_summary(data= . %>% mutate(plotcat="F"), fun = median, fun.ymin = median, fun.ymax = median, geom = "crossbar", width = 0.5, col="black", alpha=.5)
#####
cands= this_to_sgb %>% left_join(tax2) %>% filter(host_group=="H", !is.na(genus)) %>% mutate(trait=gsub("[-]",".",genus), status=case_when(trait %in% taxa_indus ~ "Human_EUR", trait %in% taxa_nonindus ~ "Human_AFR", trait %in% taxa_human ~ "Human",  trait %in% taxa_chimp ~ "NHP", TRUE ~ "other")) %>% filter(status %in% c("Human_EUR","Human_AFR","Human")) %>% select(GreatApes_95_final,status,genus, family) %>% distinct %>% group_by(status, family) %>% summarize(n=n()) %>% reshape2::dcast(family ~ status, value.var="n", fill=0)
### calculate pangenome KO differences between Blossum and non-Blossum taxa in Acidaminococcaceae, Bacteroidacea, Ruminococcaceae, Lachnospiracea, and Oscillospiraceae
cands_res = lapply(cands %>% mutate(notInd = Human + Human_Non.Indust.) %>% filter(Human_Industrialized > 10, notInd > 10) %>% pull(family), function(tt){print(tt); tax_sub =  this_to_sgb %>% left_join(tax2) %>% filter(host_group=="H", !is.na(genus)) %>% mutate(trait=gsub("[-]",".",genus), status=case_when(trait %in% taxa_indus ~ "Human_EUR", trait %in% taxa_nonindus ~ "Human_AFR", trait %in% taxa_human ~ "Human",  trait %in% taxa_chimp ~ "NHP", TRUE ~ "other")) %>% filter(status %in% c("Human_EUR","Human_AFR","Human"), family==tt) %>% mutate(status=ifelse(status=="Human_EUR",status,"Human_AFR"),presence=1) %>% reshape2::dcast(GreatApes_95_final+status ~ ogs, value.var="presence", fill=0)
tax_res=lapply(colnames(tax_sub %>% select(-GreatApes_95_final, -status))[between(colMeans(tax_sub[,-1][,-1]),.1,.9)], function(x) return(list(ogs=x, V_prev=mean(tax_sub[tax_sub$status=="Human_AFR",x]), B_prev=mean(tax_sub[tax_sub$status=="Human_EUR",x]), pval=fisher.test(table(tax_sub$status, tax_sub[,x]))$p.value))) %>% do.call("bind_rows",.) %>% mutate(tax=tt)
tax_res %>% arrange(pval) %>% return()}) %>% do.call("bind_rows",.) %>% mutate(ogs=paste0("ko:",ogs)) %>% mutate(effect=log2((B_prev+0.01)/(V_prev+0.01))) %>% mutate(Zscore=-qnorm(pval/2)*sign(effect))
panel_g_data = res_meta_mod_res  %>% filter(q.value<0.05)  %>% select(group, group_name) %>% left_join(cands_meta %>% left_join(distinct(KO_TO_ALL), by=c("ogs"="V1")) %>% filter(!is.na(V2)), by=c("group"="V2")) %>% mutate(plotcat = case_when(qval>0.05 ~ "E", Z_meta > 0 ~ "A", Z_meta < 0 ~ "B"), compcat = "Human \nEUR vs. AFR", comp="indus")  %>% mutate(group = fct_reorder(group, Z_meta, .fun=median))
plot1_right_top_aln = align_plots(panel_d  + theme(plot.margin = unit(c(1, 0, 0, 0), "cm")), panel_e, align = "h", axis = "tb")
plot1_right_top = cowplot::plot_grid(plot1_right_top_aln[[1]], plot1_right_top_aln[[2]], labels=c("e","f"))
plot1_right_mid = cowplot::plot_grid(
get_legend(panel_f + guides(colour = guide_legend(ncol=1, title = ""))+ theme(legend.position = "bottom", legend.text = element_text(size=10), legend.justification = "top")),
panel_f + theme(legend.position = "none"),
panel_g + theme(plot.margin = unit(c(0, 1, 0, 1), "cm")),
ncol=3, labels=c("","g","h"), rel_widths = c(0.2,0.3,.5))
plot1_right_bottom = cowplot::plot_grid(panel_h, panel_i, labels=c("i","j") )
plot1_right = cowplot::plot_grid(plot1_right_top, plot1_right_mid, plot1_right_bottom, ncol=1, rel_heights = c(0.4,0.3,.3))
plot1_right
ggsave(filename = "figures_and_tables/fig1_right.png", plot1_right, height=11.5, width=10, bg="white")
plot1_complete = cowplot::plot_grid(plot1_left, plot1_right, rel_widths = c(.3,.7))
ggsave(filename = "figures_and_tables/Figure_1.png", plot1_complete, height=11.5, width=16.5, bg="white")
panel_g_data = res_meta_mod_res  %>% filter(q.value<0.05)  %>% select(group, group_name) %>% left_join(cands_meta %>% left_join(distinct(KO_TO_ALL), by=c("ogs"="V1")) %>% filter(!is.na(V2)), by=c("group"="V2")) %>% mutate(plotcat = case_when(qval>0.05 ~ "E", Z_meta > 0 ~ "A", Z_meta < 0 ~ "B"), compcat = "Human \nAFR vs. EUR", comp="indus")  %>% mutate(group = fct_reorder(group, Z_meta, .fun=median))
panel_f = res_gen  %>% filter(comp=="human") %>% select(trait, mean_abu_nhp=mean_abu1) %>% left_join(res_gen %>% filter(comp=="indus") %>% select(trait, mean_abu_hsa=mean_abu1, mean_abu_hsg=mean_abu2,)) %>% mutate(status=case_when(trait %in% taxa_indus ~ "Human_EUR", trait %in% taxa_nonindus ~ "Human_AFR", trait %in% taxa_human ~ "Human",  trait %in% taxa_chimp ~ "NHP", TRUE ~ "other")) %>% reshape2::melt(.) %>% ggplot(aes(x=variable, y=value)) + geom_line(aes(col=status, group=trait), size=0.2,alpha=.2) + geom_line(data = . %>% group_by(status,variable) %>% summarize(value=mean(value)),aes(group=status, col=status), size=3) + scale_x_discrete(expand = c(0,0), labels=c("NHP","Human AFR","Human EUR")) + scale_y_continuous(breaks=c(0,5,10)) + scale_color_manual(values=c("blue","darkblue","lightblue","#FF8C00","grey")) + xlab("") + ylab("Mean CLR Abu") + theme(axis.text.x = element_text(angle=45,hjust=1))
panel_f
panel_f = res_gen  %>% filter(comp=="human") %>% select(trait, mean_abu_nhp=mean_abu1) %>% left_join(res_gen %>% filter(comp=="indus") %>% select(trait, mean_abu_hsa=mean_abu1, mean_abu_hsg=mean_abu2,)) %>% mutate(status=case_when(trait %in% taxa_indus ~ "Human_EUR", trait %in% taxa_nonindus ~ "Human_AFR", trait %in% taxa_human ~ "Human",  trait %in% taxa_chimp ~ "NHP", TRUE ~ "other")) %>% reshape2::melt(.) %>% ggplot(aes(x=variable, y=value)) + geom_line(aes(col=status, group=trait), size=0.2,alpha=.2) + geom_line(data = . %>% group_by(status,variable) %>% summarize(value=mean(value)),aes(group=status, col=status), size=3) + scale_x_discrete(expand = c(0,0), labels=c("NHP","Human (AFR)","Human (EUR)")) + scale_y_continuous(breaks=c(0,5,10)) + scale_color_manual(values=c("blue","darkblue","lightblue","#FF8C00","grey")) + xlab("") + ylab("Mean CLR Abu") + theme(axis.text.x = element_text(angle=45,hjust=1))
panel_f
panel_d=res_gen %>% reshape2::dcast(trait ~ comp, value.var="t.value") %>% left_join(res_gen %>% filter(comp=="human") %>% select(trait, log_fold_diff, q)) %>%  left_join(sgb_reps %>% select(trait=genus, phylum2) %>% distinct()) %>% mutate(status=case_when(trait %in% taxa_indus ~ "Human_EUR", trait %in% taxa_nonindus ~ "Human_AFR", trait %in% taxa_human ~ "Human",  trait %in% taxa_chimp ~ "NHP", TRUE ~ "other")) %>% ggplot(aes(x=human, y=indus)) + geom_point(aes(col=status, size=abs(log_fold_diff)))  + scale_color_manual(values=c("blue","darkblue","#FF8C00","lightblue","grey")) + theme(legend.position = "none") + geom_hline(yintercept = c(-tax_thresh,tax_thresh), lty=2, color="lightgrey") + geom_vline(xintercept = c(-tax_thresh,tax_thresh), lty=2, color="lightgrey") + ggrepel::geom_label_repel(data = . %>% filter(trait %in% c("g__Bacteroides","g__Akkermansia","g__Alistipes","g__Prevotella","g__Succinivibrio","g__Cryptobacteroides","g__Methanobrevibacter_A","g__Coprococcus","g__SIG603","g__Senegalimassilia")), aes(label=trait, col=status), max.overlaps = 20, size=3) + xlab("NHP vs. Human") + ylab("Human\nAFR vs. EUR") + scale_size_continuous(range=c(2,3))
panel_e
panel_d=res_gen %>% reshape2::dcast(trait ~ comp, value.var="t.value") %>% left_join(res_gen %>% filter(comp=="human") %>% select(trait, log_fold_diff, q)) %>%  left_join(sgb_reps %>% select(trait=genus, phylum2) %>% distinct()) %>% mutate(status=case_when(trait %in% taxa_indus ~ "Human_EUR", trait %in% taxa_nonindus ~ "Human_AFR", trait %in% taxa_human ~ "Human",  trait %in% taxa_chimp ~ "NHP", TRUE ~ "other")) %>% ggplot(aes(x=human, y=indus)) + geom_point(aes(col=status, size=abs(log_fold_diff)))  + scale_color_manual(values=c("blue","darkblue","#FF8C00","lightblue","grey")) + theme(legend.position = "none") + geom_hline(yintercept = c(-tax_thresh,tax_thresh), lty=2, color="lightgrey") + geom_vline(xintercept = c(-tax_thresh,tax_thresh), lty=2, color="lightgrey") + ggrepel::geom_label_repel(data = . %>% filter(trait %in% c("g__Bacteroides","g__Akkermansia","g__Alistipes","g__Prevotella","g__Succinivibrio","g__Cryptobacteroides","g__Methanobrevibacter_A","g__Coprococcus","g__SIG603","g__Senegalimassilia")), aes(label=trait, col=status), max.overlaps = 20, size=3) + xlab("NHP vs. Human") + ylab("Human\nAFR vs. EUR") + scale_size_continuous(range=c(2,3))
panel_d
plot1_right = cowplot::plot_grid(plot1_right_top, plot1_right_mid, plot1_right_bottom, ncol=1, rel_heights = c(0.4,0.3,.3))
plot1_complete = cowplot::plot_grid(plot1_left, plot1_right, rel_widths = c(.3,.7))
ggsave(filename = "figures_and_tables/Figure_1.png", plot1_complete, height=11.5, width=16.5, bg="white")
ggsave(filename = "figures_and_tables/Figure_1.png", plot1_complete, height=13, width=16.5, bg="white")
panel_f = res_gen  %>% filter(comp=="human") %>% select(trait, mean_abu_nhp=mean_abu1) %>% left_join(res_gen %>% filter(comp=="indus") %>% select(trait, mean_abu_hsa=mean_abu1, mean_abu_hsg=mean_abu2,)) %>% mutate(status=case_when(trait %in% taxa_indus ~ "Human_EUR", trait %in% taxa_nonindus ~ "Human_AFR", trait %in% taxa_human ~ "Human",  trait %in% taxa_chimp ~ "NHP", TRUE ~ "other")) %>% reshape2::melt(.) %>% ggplot(aes(x=variable, y=value)) + geom_line(aes(col=status, group=trait), size=0.2,alpha=.2) + geom_line(data = . %>% group_by(status,variable) %>% summarize(value=mean(value)),aes(group=status, col=status), size=3) + scale_x_discrete(expand = c(0,0), labels=c("NHP","Human (AFR)","Human (EUR)")) + scale_y_continuous(breaks=c(0,5,10)) + scale_color_manual(values=c("blue","darkblue","lightblue","#FF8C00","grey")) + xlab("") + ylab("Mean CLR Abu") + theme(axis.text.x = element_text(angle=45,hjust=1))
panel_f
panel_f = res_gen  %>% filter(comp=="human") %>% select(trait, mean_abu_nhp=mean_abu1) %>% left_join(res_gen %>% filter(comp=="indus") %>% select(trait, mean_abu_hsa=mean_abu1, mean_abu_hsg=mean_abu2,)) %>% mutate(status=case_when(trait %in% taxa_indus ~ "Human (EUR)", trait %in% taxa_nonindus ~ "Human (AFR)", trait %in% taxa_human ~ "Human",  trait %in% taxa_chimp ~ "NHP", TRUE ~ "other")) %>% reshape2::melt(.) %>% ggplot(aes(x=variable, y=value)) + geom_line(aes(col=status, group=trait), size=0.2,alpha=.2) + geom_line(data = . %>% group_by(status,variable) %>% summarize(value=mean(value)),aes(group=status, col=status), size=3) + scale_x_discrete(expand = c(0,0), labels=c("NHP","Human (AFR)","Human (EUR)")) + scale_y_continuous(breaks=c(0,5,10)) + scale_color_manual(values=c("blue","darkblue","lightblue","#FF8C00","grey")) + xlab("") + ylab("Mean CLR Abu") + theme(axis.text.x = element_text(angle=45,hjust=1))
panel_f
plot1_right_mid = cowplot::plot_grid(
get_legend(panel_f + guides(colour = guide_legend(ncol=1, title = ""))+ theme(legend.position = "bottom", legend.text = element_text(size=10), legend.justification = "top")),
panel_f + theme(legend.position = "none"),
panel_g + theme(plot.margin = unit(c(0, 1, 0, 1), "cm")),
ncol=3, labels=c("","g","h"), rel_widths = c(0.2,0.3,.5))
plot1_right_top_aln = align_plots(panel_d  + theme(plot.margin = unit(c(1, 0, 0, 0), "cm")), panel_e, align = "h", axis = "tb")
plot1_right_top = cowplot::plot_grid(plot1_right_top_aln[[1]], plot1_right_top_aln[[2]], labels=c("e","f"))
plot1_right_mid = cowplot::plot_grid(
get_legend(panel_f + guides(colour = guide_legend(ncol=1, title = ""))+ theme(legend.position = "bottom", legend.text = element_text(size=10), legend.justification = "top")),
panel_f + theme(legend.position = "none"),
panel_g + theme(plot.margin = unit(c(0, 1, 0, 1), "cm")),
ncol=3, labels=c("","g","h"), rel_widths = c(0.2,0.3,.5))
plot1_right_bottom = cowplot::plot_grid(panel_h, panel_i, labels=c("i","j") )
plot1_right = cowplot::plot_grid(plot1_right_top, plot1_right_mid, plot1_right_bottom, ncol=1, rel_heights = c(0.4,0.3,.3))
plot1_right
ggsave(filename = "figures_and_tables/fig1_right.png", plot1_right, height=11.5, width=10, bg="white")
plot1_complete = cowplot::plot_grid(plot1_left, plot1_right, rel_widths = c(.3,.7))
ggsave(filename = "figures_and_tables/Figure_1.png", plot1_complete, height=13, width=16.5, bg="white")
fig1_left = cowplot::plot_grid(panel_a + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
fig1_panel_b+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
cowplot::plot_grid(
get_legend(fig1_panel_b + guides(colour = guide_legend(ncol = 1, title="",byrow = TRUE), shape=guide_legend(ncol = 1, title="",byrow = TRUE)) +
theme(legend.spacing.y = unit(0.1, 'cm') ,legend.position = "bottom", legend.justification = "top", legend.text = element_text(size=10), legend.key.size = unit(0.2, "cm"))),
fig1_panel_c, rel_widths=c(.5,.5), labels=c("","c")),
fig1_panel_d+theme(legend.position = "none") + theme(plot.margin = unit(c(1, 0.4, 0, 0), "cm")),
ncol=1, rel_heights = c(.2,.3,.2,.3), labels=c("a","b","","d"))
plot(fig1_left)
saveRDS(fig1_left, "figures_and_tables/fig1_left.Rds")
ggsave(filename = "figures_and_tables/fig1_left.png",fig1_left, width = 6.5, height=13, bg="white")
plot1_complete = cowplot::plot_grid(plot1_left, plot1_right, rel_widths = c(.3,.7))
ggsave(filename = "figures_and_tables/Figure_1.png", plot1_complete, height=13, width=16.5, bg="white")
plot1_left
fig1_left
saveRDS(fig1_left, "figures_and_tables/fig1_left.Rds")
ggsave(filename = "figures_and_tables/fig1_left.png",fig1_left, width = 6.5, height=13, bg="white")
plot1_complete = cowplot::plot_grid(plot1_left, plot1_right, rel_widths = c(.3,.7))
ggsave(filename = "figures_and_tables/Figure_1.png", plot1_complete, height=13, width=16.5, bg="white")
plot1_left
plot1_left = readRDS("figures_and_tables/fig1_left.Rds")
plot1_complete = cowplot::plot_grid(plot1_left, plot1_right, rel_widths = c(.3,.7))
ggsave(filename = "figures_and_tables/Figure_1.png", plot1_complete, height=13, width=16.5, bg="white")
pd_sign = panel_g$data %>%  ggpubr::compare_means(data=., PD ~ host_long)
pd_sign = panel_g$data %>%  ggpubr::compare_means(data=., PD ~ host2)
pd_sign = panel_g$data %>%  ggpubr::compare_means(data=., PD ~ host)
pd_sign = panel_a$data %>%  ggpubr::compare_means(data=., PD ~ host2)
pd_sign
pd_nhp_human = panel_a$data %>% mutate(h_vs_nhp = (host2 %in% c("HsA1","HsA2","HsG"))) %>% ggpubr::compare_means(data=., PD ~ host2)
pd_nhp_human
pd_nhp_human = panel_a$data %>% mutate(h_vs_nhp = (host2 %in% c("HsA1","HsA2","HsG"))) %>% ggpubr::compare_means(data=., PD ~ h_vs_nhp)
pd_nhp_human
all_panels_right=plot_grid(
plot_grid(NULL, NULL, top_row2[[1]], NULL, top_row[[1]], top_row[[2]],top_row[[3]], top_row[[4]],  rel_widths = c(0.25,.25, 0.4, 0.1), rel_heights = c(.1,.7), ncol=4,labels=c("b","c","d",""), label_size = 20),
plot_grid(bottom_row[[1]],bottom_row[[2]], ncol=3, rel_widths = c(.5,.5),labels=c("e","f"), label_size = 20),
rel_heights = c(.5,.5), ncol=1)
## create large tree of SGBs in circular layout
pp<-ggtree(tree2, ladderize=F, layout = "circular")
pp$data=left_join(pp$data, sgb_reps, by=c("label"="sgb"))
circ = pp + geom_tippoint(aes(col=phylum2)) + scale_shape_manual(values=c(0,1,2,15,16,17)) + scale_color_manual(values=phylumcols)
panel_a = gheatmap(circ, circ$data %>% filter(isTip) %>% mutate(Human=ifelse(symbol %in% c("TRUEHuman","TRUEboth"),phylum2,"ZZ"),NHP=ifelse(symbol %in% c("TRUENHP","TRUEboth"),phylum2,"ZZ")) %>% select(label, Human, NHP) %>% column_to_rownames("label"), offset=0, width=.2, colnames_angle=90, colnames_offset_y = .25)  + scale_fill_manual(values=c(phylumcols,"white")) + theme(legend.position = "none")+theme(plot.margin = unit(c(0,0,0,0), "cm"))
panel_b=sgb_reps %>% mutate(host=ifelse(host=="both","Human+NHP",host)) %>% ggplot(aes(x=host, fill=novel)) + geom_bar() + scale_fill_manual(values=c("grey","#33A02C")) + ylab("Number of SGBs") + theme(legend.position = "none") + theme(axis.text.x = element_text(angle=45, hjust=1)) + xlab("") + scale_y_continuous(breaks=c(0,250,500,750,1000,1250), limits=c(0,1500), expand=c(0,0))
panel_c=sgb_reps %>% ggplot(aes(, y=score*100)) + geom_jitter(height=0, width=0.25, aes(x=as.numeric(as.factor(phylum2)), shape=novel, col=phylum2), size=1)  + geom_point(data = . %>% group_by(phylum2,novel) %>% summarize(score=median(score)), aes(x=as.numeric(as.factor(phylum2)), shape=novel), size=2) + scale_y_continuous(limits=c(0,100), expand=c(0,0))+ xlab("Phylum") + scale_shape_manual(values=c(21,16)) + ylab("SGB Score (%)") + scale_color_manual(values=phylumcols) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank())
### salmon mapping stats plot
panel_d_main = salmon_stats %>% left_join(sgb_long %>% left_join(sgb_reps %>% select(variable=sgb, novel)) %>% filter(novel) %>% group_by(sample) %>% summarize(rel_novel=sum(value)/10000)) %>% left_join(sample_meta) %>% ggplot(aes(y=mapped_rel, x=rel_novel, col=host_long)) + geom_point(size=3) + scale_color_manual(values=colset$col, breaks=colset$host_long) + scale_y_continuous(breaks = c(0:10)*10, limits=c(0,100), expand=c(0,0)) + scale_x_continuous(breaks = c(0:10)*10, limits=c(0,100), expand=c(0,0)) + xlab("Rel. Abundance in Novel SGBs (%)") + ylab("Mapped to SGBs (%)")
panel_d_right = salmon_stats %>% left_join(sgb_long %>% left_join(sgb_reps %>% select(variable=sgb, novel)) %>% filter(novel) %>% group_by(sample) %>% summarize(rel_novel=sum(value)/10000)) %>% left_join(sample_meta) %>% ggplot(aes(y=mapped_rel, fill=host_long)) + geom_boxplot() + scale_y_continuous(breaks = c(0:10)*10, limits=c(0,100), expand=c(0,0)) + theme_nothing() + scale_fill_manual(values=colset$col, breaks=colset$host_long) + scale_x_discrete(expand=c(0,0)) + ylab("")
panel_d_top = salmon_stats %>% left_join(sgb_long %>% left_join(sgb_reps %>% select(variable=sgb, novel)) %>% filter(novel) %>% group_by(sample) %>% summarize(rel_novel=sum(value)/10000)) %>% left_join(sample_meta) %>% ggplot(aes(x=rel_novel, fill=host_long)) + geom_boxplot() + scale_x_continuous(breaks = c(0:10)*10, limits=c(0,100), expand=c(0,0)) + theme_nothing() + scale_fill_manual(values=colset$col, breaks=colset$host_long) + scale_y_discrete(expand=c(0,0)) + xlab("")
### calculate novel diversity found for each genus for NHPs and humans
if(file.exists("../../../220303_Analysis_New/intermediate_data/pd_novel.Rds")){
pd_novel=readRDS("../../../220303_Analysis_New/intermediate_data/pd_novel.Rds")
}else{
pd_novel = lapply(unique(sgb_reps$genus), function(gg){
print(gg)
gg_sgb_homo_all=sgb_reps %>% filter(host %in% c("10","11"), genus==gg) %>% pull(sgb)
gg_homo_all=ifelse(length(gg_sgb_homo_all) > 0, picante::pd(tree = tree2 %>% keep.tip(gg_sgb_homo_all), samp=sgb_per_host["All",])$PD, 0)
gg_sgb_homo_novel = sgb_reps %>% filter(host %in% c("10","11"), genus==gg, novel==T) %>% pull(sgb)
gg_homo_novel=ifelse(length(gg_sgb_homo_novel) > 0, picante::pd(tree = tree2 %>% keep.tip(gg_sgb_homo_novel), samp=sgb_per_host["All",])$PD,0)
gg_sgb_nhp_all = sgb_reps %>% filter(host %in% c("01","11"), genus==gg) %>% pull(sgb)
gg_nhp_all=ifelse(length(gg_sgb_nhp_all) > 0, picante::pd(tree = tree2 %>% keep.tip(gg_sgb_nhp_all), samp=sgb_per_host["All",])$PD, 0)
gg_sgb_nhp_novel = sgb_reps %>% filter(host %in% c("01","11"), genus==gg, novel==T) %>% pull(sgb)
gg_nhp_novel=ifelse(length(gg_sgb_nhp_novel) > 0, picante::pd(tree = tree2 %>% keep.tip(gg_sgb_nhp_novel), samp=sgb_per_host["All",])$PD, 0)
return(list(tax=gg, gg_homo_all=gg_homo_all, gg_homo_novel=gg_homo_novel, gg_nhp_all=gg_nhp_all, gg_nhp_novel=gg_nhp_novel))
}) %>% do.call("bind_rows",.)
saveRDS(jackknife_trees, "../../../220303_Analysis_New/intermediate_data/pd_novel.Rds")
}
panel_e = pd_novel %>% left_join(sgb_reps %>% select(tax=genus, phylum2) %>% distinct) %>% mutate(nhp_rel_new = ifelse(gg_nhp_all>0, ((gg_nhp_novel+0.1)/(gg_nhp_all-gg_nhp_novel+0.1)),0), homo_rel_new = ifelse(gg_homo_all>0, ((gg_homo_novel+0.1)/(gg_homo_all-gg_homo_novel+0.1)),0)) %>% select(tax, phylum2, NHP = gg_nhp_novel, Homo = gg_homo_novel) %>% reshape2::melt() %>%  ggplot(aes(x=phylum2, y=value, label=tax)) + geom_boxplot(aes(group=phylum2), outlier.color = "white") + geom_jitter(aes(col=phylum2), width=.2) + scale_color_manual(values=phylumcols) + theme(legend.position = "none") + ylab("Novel PhyloDiv") + xlab("Phylum") + theme(axis.text.x = element_blank(), axis.ticks = element_blank()) + facet_wrap(~variable)
rr = lapply(rownames(sgb_abundance), function(x) sample(rep(colnames(sgb_abundance), times=as.vector(sgb_abundance[x,])), replace = F, size = 1000) %>% data.frame(sgb=.) %>% group_by(sgb) %>% summarize(n=n()) %>% data.frame(., sample=x) %>% select(sgb=1, count=2, sample)) %>% do.call("bind_rows",.) %>% reshape2::dcast(sample ~ sgb,fill=0, value.var="count", data=.) %>% column_to_rownames("sample")
phylodiv = picante::pd(rr, tree2)
salmon_rare %>% mutate(sid = paste0(sample,"_",depth,"_",i)) %>% dcast(sid ~ bin, value.var="tpm", fill=0) %>% column_to_rownames("sid") %>% vegan::diversity() %>% data.frame(shannon=.) %>% rownames_to_column("sid") %>% separate(sid, into = c("sample","depth","i"), sep="_") %>% left_join(sample_meta) %>% ggplot(aes(x=as.numeric(depth), y=shannon, group=host_long, col=host_long)) + geom_point() + geom_line(data = . %>% group_by(host_long, depth) %>% summarise(shannon=mean(shannon))) + scale_x_log10() + scale_color_manual(values=c(colset$col), breaks=c(colset$host_long)) + ylab("Shannon Diversity") + scale_y_continuous(limits=c(0,6),expand=c(0,0))
if(file.exists("../../../220303_Analysis_New/intermediate_data/salmon_rare_pd.Rds")){
salmon_rare_pd=readRDS("../../../220303_Analysis_New/intermediate_data/salmon_rare_pd.Rds")
}else{
salmon_rare_pd = picante::pd(salmon_rare %>% mutate(sid = paste0(sample,"_",depth,"_",i)) %>% dcast(sid ~ bin, value.var="tpm", fill=0) %>% column_to_rownames("sid"), tree = tree2, include.root = T)
saveRDS(salmon_rare_pd, "../../../220303_Analysis_New/intermediate_data/salmon_rare_pd.Rds")
}
salmon_rare_pd %>% rownames_to_column("sid") %>% separate(sid, into = c("sample","depth","i"), sep="_") %>% left_join(sample_meta) %>% ggplot(aes(x=as.numeric(depth), y=PD, group=host_long, col=host_long)) + geom_jitter(width=.05) + geom_line(data = . %>% group_by(host_long, depth) %>% summarise(PD=mean(PD))) + scale_x_log10() + scale_color_manual(values=c(colset$col), breaks=c(colset$host_long))
### calculate phyligenetic diversity
#phylodiv = picante::pd(sgb_abundance, tree2)
panel_f = salmon_rare_pd %>% rownames_to_column("sid") %>% separate(sid, into = c("sample","depth","i"), sep="_") %>% mutate(depth=as.numeric(depth)) %>% left_join(sample_meta) %>% ggplot(aes(x=depth, y=PD, group=host_long, col=host_long)) + geom_jitter(width=.05, alpha=0.5) + geom_line(data = . %>% group_by(host_long, depth) %>% summarise(PD=mean(PD)), size=1.5) + scale_x_log10() + scale_color_manual(values=c(colset$col), breaks=c(colset$host_long)) + theme(legend.position = "none") + xlab("Rarefaction Depth") + ylab("Phylogenetic Diversity")
phlyodiv=salmon_rare_pd %>% rownames_to_column("sid") %>% separate(sid, into = c("sample","depth","i"), sep="_") %>% mutate(depth=as.numeric(depth)) %>% filter(depth==1000000)
panel_g = phlyodiv %>% group_by(sample) %>% summarise(PD=mean(PD)) %>% left_join(sample_meta)  %>% ggplot(aes(x=host_long, y=PD, fill=host_long)) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=.1, size=1, shape=21) + theme(axis.text.x = element_text(angle=45, hjust=1)) + scale_fill_manual(values=colset$col, breaks=colset$host_long) + scale_y_continuous(limits=c(0,100), expand=c(0,0)) + theme(legend.position = "none", axis.text.x = element_blank(), axis.ticks.x=element_blank()) + ylab("PhyloDiv @ 1 Mio Reads") + xlab("Host") #+ ggpubr::stat_compare_means(comparisons = combn(colset$host_long, 2, simplify = F), hide.ns = T)
pd_sign = panel_g$data %>%  ggpubr::compare_means(data=., PD ~ host_long)
top_row=align_plots(panel_b,
panel_c +theme(plot.margin = unit(c(0,0,0,0), "cm")),
panel_d_main+theme(legend.position = "none")+theme(plot.margin = unit(c(0,0,0,0), "cm")),
panel_d_right+theme(plot.margin = unit(c(0,0,0,0), "cm")),
axis ="bt",align="h", ncol=3)
top_row2=align_plots(panel_d_top+theme(plot.margin = unit(c(0,0,0,0), "cm")),
top_row[[2]],
axis ="lr",align="v", ncol=2)
bottom_row = align_plots(panel_e+theme(plot.margin = unit(c(0,0,0,0), "cm")),panel_f+theme(plot.margin = unit(c(0,0.25,0,0), "cm")), panel_g+theme(plot.margin = unit(c(0,0.25,0,0), "cm")), axis ="bt",align="h")
all_panels_right=plot_grid(
plot_grid(NULL, NULL, top_row2[[1]], NULL, top_row[[1]], top_row[[2]],top_row[[3]], top_row[[4]],  rel_widths = c(0.25,.25, 0.4, 0.1), rel_heights = c(.1,.7), ncol=4,labels=c("b","c","d",""), label_size = 20),
plot_grid(bottom_row[[1]],bottom_row[[2]], ncol=3, rel_widths = c(.5,.5),labels=c("e","f"), label_size = 20),
rel_heights = c(.5,.5), ncol=1)
all_panels_complete = cowplot::plot_grid(
cowplot::plot_grid(
panel_a+theme(plot.margin = unit(c(0,0,0,0), "cm")),
all_panels_right+theme(plot.margin = unit(c(0,0,0,0), "cm")),
rel_widths = c(0.55,0.45), ncol=2, labels=c("a",""), label_size = 20),
cowplot::plot_grid(
cowplot::get_legend(panel_e + theme(legend.position = "right") + guides(color=guide_legend(ncol=3, title = "Phylum", label.theme = element_text(size=17)))),
cowplot::get_legend(panel_d_main+theme(legend.position = "right") + guides(color=guide_legend(ncol=2, title="Host", label.theme = element_text(size=17)))),
rel_widths = c(.55,.45)),
ncol=1, rel_heights = c(.8,0.2))
#plot(all_panels_complete)
ggsave(filename = "figures_and_tables/Figure_S1.png",all_panels_complete, width = 20, height=11.5, bg="white")
bottom_row = align_plots(panel_e+theme(plot.margin = unit(c(0,0,0,0), "cm")),panel_f+theme(plot.margin = unit(c(0,0.25,0,0), "cm")),, axis ="bt",align="h")
bottom_row = align_plots(panel_e+theme(plot.margin = unit(c(0,0,0,0), "cm")),panel_f+theme(plot.margin = unit(c(0,0.25,0,0), "cm")), axis ="bt",align="h")
all_panels_right=plot_grid(
plot_grid(NULL, NULL, top_row2[[1]], NULL, top_row[[1]], top_row[[2]],top_row[[3]], top_row[[4]],  rel_widths = c(0.25,.25, 0.4, 0.1), rel_heights = c(.1,.7), ncol=4,labels=c("b","c","d",""), label_size = 20),
plot_grid(bottom_row[[1]],bottom_row[[2]], ncol=3, rel_widths = c(.5,.5),labels=c("e","f"), label_size = 20),
rel_heights = c(.5,.5), ncol=1)
all_panels_complete = cowplot::plot_grid(
cowplot::plot_grid(
panel_a+theme(plot.margin = unit(c(0,0,0,0), "cm")),
all_panels_right+theme(plot.margin = unit(c(0,0,0,0), "cm")),
rel_widths = c(0.55,0.45), ncol=2, labels=c("a",""), label_size = 20),
cowplot::plot_grid(
cowplot::get_legend(panel_e + theme(legend.position = "right") + guides(color=guide_legend(ncol=3, title = "Phylum", label.theme = element_text(size=17)))),
cowplot::get_legend(panel_d_main+theme(legend.position = "right") + guides(color=guide_legend(ncol=2, title="Host", label.theme = element_text(size=17)))),
rel_widths = c(.55,.45)),
ncol=1, rel_heights = c(.8,0.2))
ggsave(filename = "figures_and_tables/Figure_S1.png",all_panels_complete, width = 20, height=11.5, bg="white")
all_panels_right=plot_grid(
plot_grid(NULL, NULL, top_row2[[1]], NULL, top_row[[1]], top_row[[2]],top_row[[3]], top_row[[4]],  rel_widths = c(0.25,.25, 0.4, 0.1), rel_heights = c(.1,.7), ncol=4,labels=c("b","c","d",""), label_size = 20),
plot_grid(bottom_row[[1]],bottom_row[[2]], ncol=3, rel_widths = c(.5,.5),labels=c("e","f"), label_size = 20),
rel_heights = c(.7,.7), ncol=1)
all_panels_complete = cowplot::plot_grid(
cowplot::plot_grid(
panel_a+theme(plot.margin = unit(c(0,0,0,0), "cm")),
all_panels_right+theme(plot.margin = unit(c(0,0,0,0), "cm")),
rel_widths = c(0.55,0.45), ncol=2, labels=c("a",""), label_size = 20),
cowplot::plot_grid(
cowplot::get_legend(panel_e + theme(legend.position = "right") + guides(color=guide_legend(ncol=3, title = "Phylum", label.theme = element_text(size=17)))),
cowplot::get_legend(panel_d_main+theme(legend.position = "right") + guides(color=guide_legend(ncol=2, title="Host", label.theme = element_text(size=17)))),
rel_widths = c(.55,.45)),
ncol=1, rel_heights = c(.8,0.2))
ggsave(filename = "figures_and_tables/Figure_S1.png",all_panels_complete, width = 20, height=11.5, bg="white")
all_panels_right=plot_grid(
plot_grid(NULL, NULL, top_row2[[1]], NULL, top_row[[1]], top_row[[2]],top_row[[3]], top_row[[4]],  rel_widths = c(0.25,.25, 0.4, 0.1), rel_heights = c(.1,.7), ncol=4,labels=c("b","c","d",""), label_size = 20),
plot_grid(bottom_row[[1]],bottom_row[[2]], ncol=3, rel_widths = c(.5,.5),labels=c("e","f"), label_size = 20),
rel_heights = c(.6.4), ncol=1)
all_panels_complete = cowplot::plot_grid(
cowplot::plot_grid(
panel_a+theme(plot.margin = unit(c(0,0,0,0), "cm")),
all_panels_right+theme(plot.margin = unit(c(0,0,0,0), "cm")),
rel_widths = c(0.55,0.45), ncol=2, labels=c("a",""), label_size = 20),
cowplot::plot_grid(
cowplot::get_legend(panel_e + theme(legend.position = "right") + guides(color=guide_legend(ncol=3, title = "Phylum", label.theme = element_text(size=17)))),
cowplot::get_legend(panel_d_main+theme(legend.position = "right") + guides(color=guide_legend(ncol=2, title="Host", label.theme = element_text(size=17)))),
rel_widths = c(.55,.45)),
ncol=1, rel_heights = c(.8,0.2))
ggsave(filename = "figures_and_tables/Figure_S1.png",all_panels_complete, width = 20, height=11.5, bg="white")
all_panels_right=plot_grid(
plot_grid(NULL, NULL, top_row2[[1]], NULL, top_row[[1]], top_row[[2]],top_row[[3]], top_row[[4]],  rel_widths = c(0.25,.25, 0.4, 0.1), rel_heights = c(.1,.7), ncol=4,labels=c("b","c","d",""), label_size = 20),
plot_grid(bottom_row[[1]],bottom_row[[2]], ncol=2, rel_widths = c(.5,.5),labels=c("e","f"), label_size = 20),
rel_heights = c(.6.4), ncol=1)
all_panels_complete = cowplot::plot_grid(
cowplot::plot_grid(
panel_a+theme(plot.margin = unit(c(0,0,0,0), "cm")),
all_panels_right+theme(plot.margin = unit(c(0,0,0,0), "cm")),
rel_widths = c(0.55,0.45), ncol=2, labels=c("a",""), label_size = 20),
cowplot::plot_grid(
cowplot::get_legend(panel_e + theme(legend.position = "right") + guides(color=guide_legend(ncol=3, title = "Phylum", label.theme = element_text(size=17)))),
cowplot::get_legend(panel_d_main+theme(legend.position = "right") + guides(color=guide_legend(ncol=2, title="Host", label.theme = element_text(size=17)))),
rel_widths = c(.55,.45)),
ncol=1, rel_heights = c(.8,0.2))
ggsave(filename = "figures_and_tables/Figure_S1.png",all_panels_complete, width = 20, height=11.5, bg="white")
all_panels_right=plot_grid(
plot_grid(NULL, NULL, top_row2[[1]], NULL, top_row[[1]], top_row[[2]],top_row[[3]], top_row[[4]],  rel_widths = c(0.25,.25, 0.4, 0.1), rel_heights = c(.1,.7), ncol=4,labels=c("b","c","d",""), label_size = 20),
plot_grid(bottom_row[[1]],bottom_row[[2]], ncol=2, rel_widths = c(.6,.4),labels=c("e","f"), label_size = 20),
rel_heights = c(.6.4), ncol=1)
all_panels_complete = cowplot::plot_grid(
cowplot::plot_grid(
panel_a+theme(plot.margin = unit(c(0,0,0,0), "cm")),
all_panels_right+theme(plot.margin = unit(c(0,0,0,0), "cm")),
rel_widths = c(0.55,0.45), ncol=2, labels=c("a",""), label_size = 20),
cowplot::plot_grid(
cowplot::get_legend(panel_e + theme(legend.position = "right") + guides(color=guide_legend(ncol=3, title = "Phylum", label.theme = element_text(size=17)))),
cowplot::get_legend(panel_d_main+theme(legend.position = "right") + guides(color=guide_legend(ncol=2, title="Host", label.theme = element_text(size=17)))),
rel_widths = c(.55,.45)),
ncol=1, rel_heights = c(.8,0.2))
all_panels_right=plot_grid(
plot_grid(NULL, NULL, top_row2[[1]], NULL, top_row[[1]], top_row[[2]],top_row[[3]], top_row[[4]],  rel_widths = c(0.25,.25, 0.4, 0.1), rel_heights = c(.1,.7), ncol=4,labels=c("b","c","d",""), label_size = 20),
plot_grid(bottom_row[[1]],bottom_row[[2]], ncol=2, rel_widths = c(.6,.4),labels=c("e","f"), label_size = 20),
rel_heights = c(.6,.4), ncol=1)
all_panels_complete = cowplot::plot_grid(
cowplot::plot_grid(
panel_a+theme(plot.margin = unit(c(0,0,0,0), "cm")),
all_panels_right+theme(plot.margin = unit(c(0,0,0,0), "cm")),
rel_widths = c(0.55,0.45), ncol=2, labels=c("a",""), label_size = 20),
cowplot::plot_grid(
cowplot::get_legend(panel_e + theme(legend.position = "right") + guides(color=guide_legend(ncol=3, title = "Phylum", label.theme = element_text(size=17)))),
cowplot::get_legend(panel_d_main+theme(legend.position = "right") + guides(color=guide_legend(ncol=2, title="Host", label.theme = element_text(size=17)))),
rel_widths = c(.55,.45)),
ncol=1, rel_heights = c(.8,0.2))
ggsave(filename = "figures_and_tables/Figure_S1.png",all_panels_complete, width = 20, height=11.5, bg="white")
